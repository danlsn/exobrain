#+TITLE: Vizualizing fundamental group
#+filetags: :autopology:


https://en.wikipedia.org/wiki/Computational_topology
https://ru.wikipedia.org/wiki/%D0%A1%D0%B8%D0%BC%D0%BF%D0%BB%D0%B8%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B9_%D0%BA%D0%BE%D0%BC%D0%BF%D0%BB%D0%B5%D0%BA%D1%81

http://graphics.stanford.edu/courses/cs468-09-fall/
hmm wonder if that does it. they mention triangulation.

https://en.wikipedia.org/wiki/Triangulation_(topology)  
https://en.wikipedia.org/wiki/Digital_manifold

* hmm that looks pretty similar... https://math.stackexchange.com/a/1792315/15108
:PROPERTIES:
:ID:       hmmthtlksprttysmlrsmthstckxchngcm
:END:
* STRT [#A] Visualisations for SU2, manually entangling loops         :think:
:PROPERTIES:
:CREATED:  [2019-01-30]
:ID:       vslstnsfrsmnllyntnglnglps
:END:

Approximate them by segments, that should work
** TODO hmm. sample random loops and then try to contract them?
:PROPERTIES:
:ID:       hmmsmplrndmlpsndthntrytcntrctthm
:END:


* [2019-02-01] my initial notes
:PROPERTIES:
:ID:       myntlnts
:END:
Triangulate the manifold
then do some sort of random walk and stop at the initial point with some probability
then, do some sort of simulated annealing to transform the loops according to the certain rules.
basically, we can contract certain subpaths (or expand?) e.g. a -> b -> a can be contracted to a. unless the points are glued?
try to guess groups from equivalence classes? then try combining them and guessing against known groups?

to contract, define some sort of 'tension' function? not sure if makes sense

this is a conservative method in the sense that it can answer what your fundamental group is NOT
in a sense, fundamental group is a conservative concept too, it can answer what your topological space is NOT


triangulation, or squares? 

if the point or edge is glued, treat it as special?

** TODO how to define manifolds? parametric? works for Rn Sn and Tn
:PROPERTIES:
:ID:       hwtdfnmnfldsprmtrcwrksfrrnsnndtn
:END:
** TODO somehow use van kampen's theorem?
:PROPERTIES:
:ID:       smhwsvnkmpnsthrm
:END:
** TODO [2019-02-01] mm. ok this ended up a bit different from what I imagined initially. still though, maybe contracting loops manually is ok, people are better at that?
:PROPERTIES:
:ID:       mmkthsnddpbtdffrntfrmwhtmtnglpsmnllyskpplrbttrttht
:END:
basically you declare some of the loops as 'trivial', but manually

** TODO [2019-02-02] hmm. if you consider a torus, composed of two triangles, looks like all vertices are labeled in the same
:PROPERTIES:
:ID:       hmmfycnsdrtrscmpsdftwtrnglslkslkllvrtcsrlbldnthsm
:END:
however, that's not enough to classify, we should be considering edges instead?

* DONE [2019-02-01] initial python impl in file:projects/fund/main.py
:PROPERTIES:
:ID:       ntlpythnmplnflprjctsfndmnpy
:END:
pretty inefficient, should rewrite in rust for finer control. also, make multithreaded


* TODO [#D] name it 'mental' (for fundamental) instead of topology? or pione??
:PROPERTIES:
:ID:       nmtmntlfrfndmntlnstdftplgyrpn
:END:

* related                                                      :topology:viz:
:PROPERTIES:
:ID:       rltd
:END:
