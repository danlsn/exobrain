#+TITLE: Managing dotfiles
#+logseq_title: dotfiles
#+filetags: dotfiles

* awesome-dotfiles https://github.com/webpro/awesome-dotfiles
:PROPERTIES:
:ID:       0bb83f8780b6ec90e6d4fe37283c02c5
:END:
check occasionally?

* What I tried
:PROPERTIES:
:ID:       52446f0e960bb31a43e48e1c44cf742d
:END:
** CANCEL gnu stow?
:PROPERTIES:
:ID:       f96782c9a85933af651bca272f14372f
:END:
apparently a parallel hierarchy with symlinks?
would be nice to specify, which directories should be created and which should just be symlinked. Otherwise stuff might end up in symlinked folders

- very clumsy to use, hard to replace existing entries, no apparent way of deleting them (unlike git)

** CANCEL fresh to build gh config? https://github.com/freshshell/fresh
:PROPERTIES:
:ID:       34d3a9a4dc2f68abe9a314df30186b77
:END:
you can write a configuration, and it will symlinka all automatically 
apparently can source from gh repos, so you could just 'follow' someones' dotfiles (not very portable though)
** CANCEL homesick? https://github.com/technicalpickles/homesick
:PROPERTIES:
:ID:       8f056971d7322a2aec704a146b5ca9ce
:END:
looks like a parallel hierarchy of dotfiles mimicing /home? could be convenient to manage with symlinks...
wonder if .homesick directory is configurable

ok, so if i create home dir and add relative symlinks to it, it sort of works fine.
add a script to check symlink integrity?
still unclear what should i do with patch files. maybe have a manual dir with symlinks as well?
homesick track? although it's a bit weird if configuration comes from different files, but i guess it's quite rare

ugh.. homedir_subdir is a bit weird.. could make it support relative symlinks within repo
ugh.. homesick seems to rewrite relative symlinks to absolute... wtf???

** mackup? https://github.com/lra/mackup
:PROPERTIES:
:ID:       b32de648193da7e4b4c5fddcfe5aca54
:END:
apparently just backs up and symlinks configs for some applications
hmm, so it supports doublecmd. wonder how they handle their configs..
nope, just copies. nothing interesting
** CANCEL vcsh http://blog.tfnico.com/2014/03/managing-dot-files-with-vcsh-and-myrepos.html
:PROPERTIES:
:ID:       ea1ecfc9b2dbf5fa6e019856572a6bc1
:END:
weird stuff, messes with git and uses mr tool to manipulate on multiple repos at the same time
take another look at it?
mm -- ok, so apparently it's just like single repo view but routing to different subrepos
e.g. vcsh init vim; vcsh vim commit .vimrc
** dotbot?
:PROPERTIES:
:ID:       9b89b7091ef847dab2924abfbafb7d37
:END:
yaml configs.. ugh
** dotdrop https://github.com/deadc0de6/dotdrop
:PROPERTIES:
:ID:       61eeefd7bd615dfd335e6bc525663be7
:END:
allows templating thanks to jinja2
erm.. it copies, not symlinks apparently
** CANCEL dotgit https://github.com/kobus-v-schoor/dotgit
:PROPERTIES:
:ID:       e30e864a1ed623bd8bf0d7e23a6031f8
:END:
hmm encryption! 
aims to keep all in single repository
too comlicated.
** https://github.com/evanpurkhiser/dots has post installation script
:PROPERTIES:
:ID:       87b60471b5c9eede6b1f82936049988a
:END:
was updated 2 years ago



* DONE using git repository with symlinks + external ~ working directory
:PROPERTIES:
:CREATED:  [2018-04-02]
:ID:       aa2626b97de46cd355503238fa5ef94d
:END:

/L/repos/configuration 
cgit command

- cons: not dropbox friendly because of symlinks
  maybe sync via syncthing?

  - TODO how to make todos here?

- keep only symlinks to files unless it absolutely makes sense to symlink directory
  why: if it's a directory locally and a symlink in the repo (e.g. with autostart dir), it won't merge easily

- symlink into from various repos

  - public dotfiles
  - private dotfiles
  - machine specific dotfiles
  - files which aren't under git (configs-nogit)
    config-nogit: use tree command to store contents
    maybe git lfs would be better for that??
  - scripts
  - histories: bash, python, etc.
  - etc

** bootstrapping
:PROPERTIES:
:ID:       dce19f3c92ea50bc67743f34434b1c7f
:END:
- alias cgit='git --git-dir=/L/repos/configuration/.git --work-tree=/home/karlicos'
- cgit ireset -- to restore working dir state
- run check.sh from ~ and restore all the missing symlinks
  resolve filtype configs (file vs symlinks)
** workflow
:PROPERTIES:
:ID:       2e2e2d35a15a6146a9bbbc246a9ea4cd
:END:
cgit status to see if anything has changed
cgit add / cgit commit / cgit push
** TODO try git lfs?
:PROPERTIES:
:ID:       7a49f0d7bdc008f0ca3af223d6c96f6d
:END:

* TODO something about files which can't be kept in git
:PROPERTIES:
:ID:       644e94e3ac635d09672a2283c88dfd3a
:END:
** for configs which are patched via script, symlink what patches it :config:setup:log:
:PROPERTIES:
:CREATED:  [2018-05-12]
:ID:       dcd2748291f500be4ef4d0e08b828258
:END:

ln -s "$(realpath $BASH_SOURCE)" "$CDIR"



* Tooling
:PROPERTIES:
:ID:       970d329b9f2d1f639f404599455574e4
:END:
** jq for patching JSON                                                :json:
:PROPERTIES:
:ID:       cb82d74bc83461574e104121e6b675f1
:END:
https://jqplay.org/ is also quite convenient



* DONE [2018-06-20] configs which are not symlinking -- have a script which checks them against reference every few hours and complains if config doesn't match the reference? :setup:configuration:
:PROPERTIES:
:ID:       dd4a73edfbf9aa08bbf8ee958300dd3a
:END:
I guess it would belong to configuration repository
