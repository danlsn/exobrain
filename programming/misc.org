#+TITLE: Uncategorized
#+logseq_graph: false
#+filetags: programming

* TODO [#D] JSONCrush – Compress JSON into URI Friendly Strings | Hacker News :json:
:PROPERTIES:
:CREATED:  [2019-11-27]
:ID:       jsncrshcmprssjsnntrfrndlystrngshckrnws
:END:

https://news.ycombinator.com/item?id=21641760
* [2020-03-30] karan/Projects: A list of practical projects that anyone can solve in any programming language.
:PROPERTIES:
:ID:       mnkrnprjctslstfprctclprjchtnyncnslvnnyprgrmmnglngg
:END:
https://github.com/karan/Projects

* [2020-03-31] Debugging with tmate · Actions · GitHub Marketplace :githubci:
:PROPERTIES:
:ID:       tdbggngwthtmtctnsgthbmrktplc
:END:
https://github.com/marketplace/actions/debugging-with-tmate
ok, nice it's like circleci ssh debugging.
less convenient because you have to commit a step, but ok considering you don't need it often
* [#D] [2020-01-19] Home - Mozilla Hacks - the Web developer blog
:PROPERTIES:
:ID:       snhmmzllhcksthwbdvlprblg
:END:
https://hacks.mozilla.org/

* [2018-03-01] latency matters                        :performance:ux:danluu:
:PROPERTIES:
:ID:       thltncymttrs
:END:
https://danluu.com/input-lag/
try typing in terminal with 30ms ping

* [2018-06-16] Tweet from Gary Bernhardt (@garybernhardt), at Jun 16, 13:54 :performance:
:PROPERTIES:
:ID:       sttwtfrmgrybrnhrdtgrybrnhrdttjn
:END:
: In 2008, I was extremely frustrated by Ruby imposing a constant ~100 ms startup penalty on hello world. In 2018, computers are ~3.5 times faster (4479 vs. 1266 Geekbench for 2007 vs. 2017 MBP). TypeScript imposes a 1600 ms startup penalty on hello world. https://t.co/GzMcXPoFNU

https://twitter.com/garybernhardt/status/1007690864909529088

* [2015-11-04] inversion of control
:PROPERTIES:
:ID:       wdnvrsnfcntrl
:END:
: Inversion of Control principle, which basically states that the flow of your application depends on the object graph that is built up during program execution, and such a dynamic flow is made possible by object interactions being defined through abstractions.
: This run-time binding is achieved by mechanisms such as dependency injection or a service locator.

* [2017-05-29] gdb tips                                                 :gdb:
:PROPERTIES:
:ID:       gdbtps
:END:
Debugging multiple threads/processes
: set follow-fork-mode [parent|child]
: set detach-on-fork [on|off]


http://www.delorie.com/gnu/docs/gdb/gdb_26.html
http://sourceware.org/gdb/current/onlinedocs/gdb/Forks.html

** Attaching to a process in ubuntu:
:PROPERTIES:
:ID:       ttchngtprcssnbnt
:END:
: echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope


* TODO [#D] use 'commands' 'end'                                  :gdb:habit:
:PROPERTIES:
:CREATED:  [2018-08-10]
:ID:       c1bfa720-84f1-4cd5-a7c1-8526acb88555
:END:
https://sourceware.org/gdb/onlinedocs/gdb/Break-Commands.html

* [#C] [2019-11-01] Why TDD Isn't Crap • Hillel Wayne               :testing:
:PROPERTIES:
:ID:       frwhytddsntcrphlllwyn
:END:
https://www.hillelwayne.com/post/why-tdd-isnt-crap/
: While the first PBT library was Haskell Quickcheck, arguably the most sophisticated is the Hypothesis Python library.
* TODO [#C] Tweet from Awesome (@awesome__re), at Nov 19, 16:36 awesome fuzzing :testing:
:PROPERTIES:
:CREATED:  [2019-11-19]
:ID:       twtfrmwsmwsmrtnvwsmfzzng
:END:
: Awesome Fuzzing
: Automated software testing technique that involves feeding pseudo-randomly generated input data.

https://t.co/gQZuxH48yM

https://twitter.com/awesome__re/status/1138001812718440448

* [#C] [2019-08-08] Web Colors                                       :design:
:PROPERTIES:
:ID:       thwbclrs
:END:
https://www.rapidtables.com/web/color/index.html

* TODO [#C] [2020-11-17] [[https://github.com/actions/virtual-environments/issues/1816][Ubuntu-latest workflows will use Ubuntu-20.04 · Issue 1816 · actions/virtual-environments]] :ci:
:PROPERTIES:
:ID:       tsgthbcmctnsvrtlnvrnmntsswllsbntssctnsvrtlnvrnmnts
:END:
* TODO [#C] [2019-08-18] cpuu/awesome-fuzzing: A curated list of awesome Fuzzing(or Fuzz Testing) for software security
:PROPERTIES:
:ID:       sncpwsmfzzngcrtdlstfwsmfzzngrfzztstngfrsftwrscrty
:END:
https://github.com/cpuu/awesome-fuzzing#readme
: Awesome Fuzzing

* [#C] [2018-12-09] mre/awesome-static-analysis: Static analysis tools for all programming languages
:PROPERTIES:
:ID:       snmrwsmsttcnlysssttcnlysstlsfrllprgrmmnglnggs
:END:
https://github.com/mre/awesome-static-analysis/

* [#C] [2020-02-28] Repl.it - EmbellishedWanConcentrate
:PROPERTIES:
:ID:       frrpltmbllshdwncncntrt
:END:
https://repl.it/repls/EmbellishedWanConcentrate
wow, nice
* STRT [#C] Vscode?                                                     :ide:
:PROPERTIES:
:CREATED:  [2019-12-13]
:ID:       vscd
:END:
: I switched to NeoVim a few years ago and I'm not entirely sure whether Vim has caught up in features, diverged, or what ratio of the two. That said, I'm not switching back. The only editor I'm really interested in is VSCode. Not that I use it much, but I am very impressed.

* [#C] [2019-08-18] Highlights from Git 2.23 - The GitHub Blog          :git:
:PROPERTIES:
:ID:       snhghlghtsfrmgtthgthbblg
:END:
https://github.blog/2019-08-16-highlights-from-git-2-23/
: You may have used git grep to search for some text in your Git project, just as you may have used git diff to view active changes. What do the two have in common? They both display some contents in your repository, and both have support to show the surrounding function context with -p (short for --show-function) or -W (short for --function-context), respectively.
* [2020-03-31] circle CI's mac plan is paid (40$/month min)              :ci:
:PROPERTIES:
:ID:       tcrclcsmcplnspdmnthmn
:END:
* TODO [#B] Git blame ignore formatting                                 :git:
:PROPERTIES:
:CREATED:  [2020-03-23]
:ID:       gtblmgnrfrmttng
:END:

Configure your git blame to ignore cleanup changes.

https://www.moxio.com/blog/43/ignoring-bulk-change-commits-w...
* TODO [#C] [2019-08-11] alexmojaki/heartrate: Simple real time visualisation of the execution of a Python program. :viz:
:PROPERTIES:
:ID:       snlxmjkhrtrtsmplrltmvslstnfthxctnfpythnprgrm
:END:
https://github.com/alexmojaki/heartrate
* [#C] [2019-07-23] SomethingNew/Resources.md at master · d-cook/SomethingNew :programming:
:PROPERTIES:
:ID:       tsmthngnwrsrcsmdtmstrdcksmthngnw
:END:
https://github.com/d-cook/SomethingNew/blob/master/Resources.md

* [#C] [2019-07-23] SomethingNew/Concepts.md at master · d-cook/SomethingNew
:PROPERTIES:
:ID:       tsmthngnwcncptsmdtmstrdcksmthngnw
:END:
https://github.com/d-cook/SomethingNew/blob/master/Concepts.md
* TODO [#D] PandaPy has the speed of NumPy and the usability of Pandas
:PROPERTIES:
:CREATED:  [2020-01-25]
:ID:       pndpyhsthspdfnmpyndthsbltyfpnds
:END:

: PandaPy has the speed of NumPy and the usability of Pandas - https://news.ycombinator.com/item?id=22142869

* [2016-05-27] Your real job as a software engineer isn’t to write code. It’s to translate hand-wavy business requirements into detailed specs that a computer can https://medium.com/swizec-s-nightowls/what-should-you-learn-to-get-a-better-coding-job-6453ef083597#.wc1oba7v3
:PROPERTIES:
:ID:       fryrrljbssftwrngnrsnttwrthldylrntgtbttrcdngjbfwcbv
:END:
* [2016-09-15] caching styles                                       :caching:
:PROPERTIES:
:ID:       thcchngstyls
:END:
write-through: synchronous writes both to the cache and the backing store
write-back: initially, only in cache, write to backing store postponed until it's about to be modified/replaced
* [2016-10-02] distributed system patterns                      :distributed:
:PROPERTIES:
:ID:       sndstrbtdsystmpttrns
:END:
- Load balancer
- Scatter and gather
- Result cache
- map reduce
- Bulk requests
* DONE [#B] [2020-05-28] [[https://lobste.rs/s/zte1xm/ideology][Ideology | Lobsters]] :programming:talk:
:PROPERTIES:
:ID:       thslbstrssztxmdlgydlgylbstrs
:END:
- [2021-01-10] TLDR: both "I don't need tests" and "I don't need types" people are wrong, often because they haven't seen better alternatives
* Variance                                                              :plt:
:PROPERTIES:
:ID:       vrnc
:END:
The question: what are the conditions for the function A -> B to be a subtype of C -> D?

1. A is subtype of B means there is a special function castAB :: A -> B
2. Two casts compose into another casts, cast compositions are isomorphic (that is, castBC . castAB is essentially the same thing as castAC)
3. We wanna implement castAfB -> castCfD in order to show (A -> B) <: (C -> D)

   - X :: (A -> B) -> (C -> D)
   - we can only use functions applications and cast
   - X (fab :: A -> B) (c :: C) = ? :: D
   - the only thing we can do is to transform c to some another type, that is, we need castCT :: C -> T
   - now, we have (castCT c) :: T, basically, leaves us in the same situation, so, we actually need castCA :: C -> A
   - now, we have (castCA c) :: A, and (fab $ castCA c) :: B. The only way to get D is to use castBD :: B -> D

4. So, we have (A -> B) <: (C -> D), that is, A -> B is subtype of C -> D if C is subtype of A and B is subtype of D.


The return type (B and D) is covariant, since preserves the direction of <:
The argument type (A and C) is contravariant, since it flips the direction of <:


Container reading: covariant:

: S <: T, then ReadonlyCollection<S> <: ReadonlyCollection<T>


Container writing: contravariant:

: S <: T, then Consumer<T> <: Consumer<S>


- C++ poiners: covariant
- Java
  - arrays: covariant
  - Collection<? extends T>: covariant
  - Collection<? super T>: contravariant
* [2017-05-08] gdb notes                                                :gdb:
:PROPERTIES:
:ID:       gdbnts
:END:
- D_GLIBCXX_DEBUG


- https://stackoverflow.com/questions/2492020/how-to-view-contents-of-stl-containers-using-gdb-7-x
Get the python viewers from SVN
svn://gcc.gnu.org/svn/gcc/trunk/libstdc++-v3/python
: Add the following to your ~/.gdbinit
: python
: import sys
: sys.path.insert(0, '/path/to/pretty-printers/dir')
: from libstdcxx.v6.printers import register_libstdcxx_printers
: register_libstdcxx_printers (None)
: end


You have to make sure that you have the package with the libstdc++ library compiled with the debugging flags.

For clang: ~-fno-limit-debug-info~ do not limit debug information produced to reduce size of debug binary
