#+TITLE: Error handling
#+filetags: errors

* examples of temporary timeouts                                    :network:
:PROPERTIES:
:CREATED:  [2018-05-18]
:ID:       xmplsftmprrytmts
:END:

: requests.exceptions.ReadTimeout:
: requests.exceptions.ConnectionError:
: socket.timeout: _ssl.c:817: The handshake operation timed out
:   File "/usr/lib/python3.6/socket.py", line 586, in readinto
:     return self._sock.recv_into(b)
: ConnectionResetError: [Errno 104] Connection reset by peer


** STRT backoff library, using it somewhere already
:PROPERTIES:
:ID:       bckfflbrrysngtsmwhrlrdy
:END:
using it in vkdump
backoff_network_errors in kython
I guess we could backoff indefinitely; and rely on global timeout if necessary
*** DONE check if kron has global timeout
:PROPERTIES:
:ID:       chckfkrnhsglbltmt
:END:



* network errors should be non-fatal, since they generally CAN be gracefully handled
:PROPERTIES:
:CREATED:  [2018-04-09]
:ID:       ntwrkrrrsshldbnnftlsncthygnrllycnbgrcfllyhndld
:END:
** TODO [2019-10-19] add to post?                                      :blog:
:PROPERTIES:
:ID:       stddtpst
:END:
* [#A] [2018-04-03] Joe Duffy: the error model http://joeduffyblog.com/2016/02/07/the-error-model/ :errors:
:PROPERTIES:
:ID:       tjdffythrrrmdljdffyblgcmthrrrmdl
:END:
