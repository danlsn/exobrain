#+TITLE: Building browser extensions
#+filetags: webext

* tips etc
:PROPERTIES:
:ID:       d68d6b237bb4bf7f13046ac1732404c1
:END:
** [#A] Apply the Javascript best practices                              :js:
:PROPERTIES:
:ID:       a8b87a4b956df334422879845360afb3
:END:
use
- Flow or Typescript
- ES6
- Promise API
- Fetch API

* [#B] addons.mozilla.org publishing                                    :amo:
:PROPERTIES:
:ID:       236accf9ad1ea36288378f5af457e842
:END:
** TODO [#A] releasing new PUBLIC version on AMO
:PROPERTIES:
:CREATED:  [2020-04-03]
:ID:       9b8e26ee30415f0538f8395afec63920
:END:

apparently doesn't work through webext regardless. once it's autosigned, you're screwed??
so to publish on AMO you always have to upload the zip

- with_secrets ./build --firefox --release --lint
  dump the zip extension
- choose to upload it AS LISTED on AMO
- git archive master --output=promnesia-source.zip -- upload source

huh. interesting, it seemed to have published instantly...
- [2020-05-19] and again, published immediately... odd!


* TODO [#B] [2019-08-18] [[https://github.com/fregante/Awesome-WebExtensions#readme][fregante/Awesome-WebExtensions: A curated list of awesome resources for WebExtensions development.]] :promnesia:grasp:webext:
:PROPERTIES:
:ID:       67285fc8d71d28d8e8b017f9e872a992
:END:
: Chrome Webstore Upload - Upload the extension to the Chrome Web Store via cli (or on Travis, automatically).
** [2019-09-02] https://github.com/LinusU/wext-shipit this works also for firefox? :webext:firefox:
:PROPERTIES:
:ID:       60c90e6f350320f27a7d6e6e39959b45
:END:
* TODO [#C] [2019-08-18] [[https://github.com/acvetkov/sinon-chrome][use sinon-chrome? Mocks the Chrome Extensions API for testing]] :grasp:promnesia:webext:
:PROPERTIES:
:ID:       7fd5cd46f14e00be105600c925768bf1
:END:


* START [#B] [2019-08-28] Working with quota on mobile browsers: A research report on browser storage - HTML5 Rocks :html5:webext:
:PROPERTIES:
:ID:       f6eeb853b713d928a2478cba97fad932
:END:
:LOGBOOK: 
- State "START"      from "TODO"       [2019-09-07]
:END: https://www.html5rocks.com/en/tutorials/offline/quota-research/ 
** [2019-09-07] To do this research, I have built a tool called Browser Storage Abuser to minimize the manual work. You can store as much data as possible to see the limit of each storage on your browser.
:PROPERTIES:
:ID:       7b88b1e0d413a38d25d823d0568f1fc9
:END:
** [2019-09-07] Android firefox: For IndexedDB, you can use up to 50MB on desktop, 5MB on mobile for free. However, the user can allow the limit to be removed by granting permission.
:PROPERTIES:
:ID:       88240ef39b235b0ab9df8b9b15eed0e9
:END:
* DONE [#C] [2019-05-01] telotortium/org-capture-extension at native-messaging-host
:PROPERTIES:
:ID:       b337ff2cb7fe269a11f475c4f1c595d0
:END:
https://github.com/telotortium/org-capture-extension/tree/native-messaging-host
: Native Messaging Host
: This is a version of the Org Capture Extension using the Chrome Native Messaging host
** [2019-08-10] [[https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Native_messaging][hmm firefox also got it?]]
:PROPERTIES:
:ID:       aaebd7da709cf69c39b54aaaa5efcc75
:END:

** [2020-02-15] ok, seems tricky, and apparently requires installing via OS
:PROPERTIES:
:ID:       90af82d77705380a0efae822fd75f7cf
:END:

* TODO [#C] [2019-09-08] [[https://github.com/fregante/webext-options-sync][fregante/webext-options-sync: Helps you manage and autosave your extension's options. Chrome and Firefox.]] :promnesia:grasp:
:PROPERTIES:
:ID:       a62d941ecb194d0e9c3fe9c4274daadc
:END:
: webext-domain-permission-toggle -
* TODO [#C] [2019-08-29] [[https://stackoverflow.com/questions/35857606/chrome-messaging-chrome-runtime-sendmessage-not-working-on-the-newest-release-4][javascript - Chrome messaging: chrome.runtime.sendMessage not working on the newest release 49 - Stack Overflow]] :webext:
:PROPERTIES:
:ID:       2564b4f83968d3bc56fee11707fab5d3
:END:
: This is the intended behaviour. Messages were not supposed to be received by the sending page. The old behaviour was a bug. This is discussed in these bug reports: 479425 479951.
* TODO [#C] browser_action impacts presense of menu item on android.. :webext:
:PROPERTIES:
:CREATED:  [2019-09-08]
:ID:       98a2960b221332c014e866cf375137e2
:END:
* [#C] [2019-10-27] Re: [fregante/webext-options-sync] feat: optionally use chrome.storage.local (#19) - karlicoss@gmail.com - Gmail
:PROPERTIES:
:ID:       d5aeff1ce77909e02462faed9b12e0fc
:END:
: I'd rather not offer this option because I think cross-device sync is always preferable from the user's point of view, but I'm willing to add this for extensions with options that are meant to be local (e.g. a port number)
: PR welcome, documentation included.
* TODO [#C] [2019-09-08] [[https://github.com/fregante/webext-options-sync/pull/8/commits/58aea6988d268b73f197894839a3318d909b06a0][let the user decide what storage type shall be used by obama ¬∑ Pull Request #8 ¬∑ fregante/webext-options-sync]]
:PROPERTIES:
:ID:       50b12f8cbca20fa76932c079e0ad2473
:END:

* DONE [#B] [2019-09-08] notlmn/browser-extension-template: Barebones boilerplate with webpack, options handler and auto-publishing :grasp:webext:
:PROPERTIES:
:ID:       f2e7d7379128d067eab11948dee72d25
:END:
https://github.com/notlmn/browser-extension-template
: Features
:     Use modern Promise-based browser.* APIs webextension-polyfill.
:     Auto-syncing options.
:     Auto-publishing with auto-versioning and support for manual releases.
:     Extensive configuration documentation.

* [2020-02-08] [[https://blog.mozilla.org/addons/2018/02/28/discontinuing-support-for-beta-versions/][Discontinuing support for beta versions | Mozilla Add-ons Blog]]
:PROPERTIES:
:ID:       bfd376cf52b930b877caf382709d571b
:END:
: AMO supports signing self-hosted (unlisted) versions, which we believe is a good replacement. With self-hosted versions, developers can create multiple development update channels if needed. They can easily move users between channels. The main caveat is that the files and update mechanisms need to be hosted by the developer
* [2020-02-15] [[https://dev.to/napolux/how-to-add-comments-to-packagejson-5doi][How to add comments to package.json? - DEV Community üë©‚Äçüíªüë®‚Äçüíª]] :blog:
:PROPERTIES:
:ID:       ed065b2c1ef373b7318cae7d804c191f
:END:
: How to add comments to package.json?
* TODO [#C] [2020-02-15] [[https://www.npmjs.com/package/xo][xo - npm]]
:PROPERTIES:
:ID:       75e1cc2c52850d070d948d553cecbbc8
:END:
: Opinionated but configurable ESLint wrapper with lots of goodies included. Enforces strict and readable code. Never discuss code style on a pull request again! No decision-making. No .eslintrc or .jshintrc to manage. It just works!
* [2020-02-15] [[https://github.com/notlmn/browser-extension-template/blob/master/source/options-storage.js][browser-extension-template/options-storage.js at master ¬∑ notlmn/browser-extension-template]]
:PROPERTIES:
:ID:       620cae917520eeafa8c065922734ee99
:END:
: import OptionsSync from 'webext-options-sync';

* TODO [#C] [2020-02-15] [[https://github.com/notlmn/browser-extension-template#publishing][notlmn/browser-extension-template: Barebones boilerplate with webpack, options handler and auto-publishing]]
:PROPERTIES:
:ID:       370d5a26bcdcb2c0373a2a01dfb63f14
:END:
: Target respective browsers using .babelrc.
* [#C] [2020-02-15] [[https://github.com/DrewML/chrome-webstore-upload-cli][DrewML/chrome-webstore-upload-cli: Upload/Publish Chrome Web Store extensions from the CLI]] :webext:
:PROPERTIES:
:ID:       3df8a3592a27dc3024e4713c5079347a
:END:
: chrome-webstore-upload-cli

- comment
: guide for publishing on chrome store
* [#C] [2020-02-21] [[https://lobste.rs/s/2bq29z/choosing_browser_write_extensions_for][Choosing a browser to write extensions for | Lobsters]]
:PROPERTIES:
:ID:       592639e63271f27151ab0cebe762e907
:END:
: Thanks for the advice! I was actually inspired to go down this route by seeing the things you‚Äôve been building. I think my interests are similar, but not quite the same.
: There are two main extensions I want to build. First, a way to archive and mark up webpages. There is a Chrome extension called Weava that does something similar, but it‚Äôs SaaS and I doesn‚Äôt seem to have a convenient export format.
: Second, I would like better history tools. In particular, often have the problem that I read an article or page and want to link to it in a blog post (or similar), but I‚Äôve forgotten how I found it. I‚Äôd like an extension that can maintain ‚Äúchains‚Äù of followed links so that I can always look up how I found something.
: I‚Äôm happy to get in touch and consider collaborating if you‚Äôre interested.
* [#B] [2020-02-18] [[https://github.com/mozilla/web-ext][mozilla/web-ext: A command line tool to help build, run, and test web extensions]]
:PROPERTIES:
:ID:       24fe529cb0f0a4fffc14110d9c5fb9b7
:END:
: Hi! This tool is under active development. To get involved you can watch the repo, file issues, create pull requests, or ask a question on dev-addons
* [#B] [2020-02-18] [[https://github.com/mozilla/web-ext/issues/804][Add `web-ext submit` to submit listed add-ons to AMO ¬∑ Issue #804 ¬∑ mozilla/web-ext]]
:PROPERTIES:
:ID:       750613d04d3067ce9fa453b9779f1c15
:END:
: web-ext submit would submit to amo only. If you want the zip you can already use web-ext build
* [#D] [2020-02-17] [[https://lea.verou.me/2012/07/introducing-prism-an-awesome-new-syntax-highlighter/#more-1841][Introducing Prism: An awesome new syntax highlighter | Lea Verou]]
:PROPERTIES:
:ID:       1f360cab6a74ef8b4e9db8f9920305cb
:END:

* TODO chrome got far better profiling, better debugging information + screenshots :webext:
:PROPERTIES:
:CREATED:  [2020-03-22]
:ID:       750391e0bc424febf16eabc52a3bbcf0
:END:
* TODO ugh, can't force webpack/chrome into using date in the version... :webext:
:PROPERTIES:
:CREATED:  [2020-04-02]
:ID:       9d2cf8f93073313b220818e987b56aa4
:END:
https://developer.chrome.com/apps/manifest/version
* [2020-04-05] [[https://github.com/roam-unofficial/roam-toolkit/blob/master/webpack.config.js][roam-toolkit/webpack.config.js at master ¬∑ roam-unofficial/roam-toolkit]] :webext:
:PROPERTIES:
:ID:       bf35bc5ed0631b9ab00db0231032bb90
:END:
: new webpack.DefinePlugin({
: 			'NODE_ENV': JSON.stringify(nodeEnv),
: 			'WEB_BROWSER': JSON.stringify(webBrowser),
: 		}),

- comment
: hmm wonder if this is useful?
* [2018-03-29] how webext works?
:PROPERTIES:
:ID:       6e22e6338717b353e2a85db955d83256
:END:
background runs all the time. communicate with extension via message passing. TODO runtime_handlers?
content scripts have no access to background
make sure you return false at the end

* logging
:PROPERTIES:
:ID:       ad8a2265fa17b7808fca5ae77cada94f
:END:
from content page, ~console.log~ goes to the page console, whereas from the rest to ~background.html~
* TODO [#C] [2020-11-04] [[https://github.com/softvar/awesome-web-storage][softvar/awesome-web-storage: Everything you need to know about Client-side Storage.]] :webext:js:
:PROPERTIES:
:ID:       ba837fd735131013a8bc18e203432146
:END:
* [#C] [2020-05-14] [[https://news.ycombinator.com/item?id=23168874][Let's guess what Google requires in 14 days or they kill our extension | Hacker News]] :webext:
:PROPERTIES:
:ID:       1deb3df7dbf3e301ba27b8f887f6b315
:END:
: In practice I was able to use native messaging to spawn the executable but to actually talk with it I needed to use a websocket, kind of defeating the point.

* TODO for fucks sake. releasing even without 'unlisted' channel doesn't make it automatically submitted for manual review???
:PROPERTIES:
:CREATED:  [2020-04-03]
:ID:       ea7ef6b7e72ba8f93e94d55192c51aee
:END:
** [2020-02-15] ok, first time you need to create manually; after that, get the id (it's public, so ok to put in a git repo) and use it with the build script
:PROPERTIES:
:ID:       798b043b025e64bff5a5244ae6297d7d
:END:

** [2020-05-17] listed vs unlisted
:PROPERTIES:
:ID:       2a8d337de2baf698dc8f17da21c85602
:END:
so according to this https://blog.mozilla.org/addons/2017/01/26/mixing-listed-and-unlisted-on-amo , you can have mixed self distributed/AMO with the same extension id, but not the same version
so adding --unlisted is a reasonable way to beta test
the only confusing bit is why it is still queueing for reviews??
** DONE [#B] ugh why did I end up with several versions of grasp on AMO??
:PROPERTIES:
:CREATED:  [2020-02-08]
:ID:       d1a51b25ef6e37fb69531829749154ba
:END:
it feels that signing is enough to upload. next time try waiting for a bit..
https://addons.mozilla.org/en-US/developers/addons

* [#C] [2020-05-24] [[https://developer.chrome.com/extensions/background_pages][Manage Events with Background Scripts - Google Chrome]]
:PROPERTIES:
:ID:       29d1e4ce7b2c7d7a4317da11d2bded31
:END:
: The only occasion to keep a background script persistently active is if the extension uses chrome.webRequest API to block or modify network requests. The webRequest API is incompatible with non-persistent background pages.

* [#C] [2020-05-13] [[https://news.ycombinator.com/item?id=23168874#23171176][Let's guess what Google requires in 14 days or they kill our extension | Hacker News]] :google:
:PROPERTIES:
:ID:       9cea79ee165fd3e24538a6bebe37f9d9
:END:
- [2020-05-13] [[https://news.ycombinator.com/item?id=23168874][Let's guess what Google requires in 14 days or they kill our extension | Hacker News]]
* [#C] [2019-07-07] client/security.rst at 734e3a25318364819a8c38ef881e4788a2b06365 ¬∑ hypothesis/client :webext:security:
:PROPERTIES:
:ID:       1f144bee6b9b0b746287d227f3fc4fb8
:END:
https://github.com/hypothesis/client/blob/734e3a25318364819a8c38ef881e4788a2b06365/docs/developers/security.rst
** [2019-08-04] For example: in order to draw highlights, the annotated page needs to know the location of annotations, but it does not ever need to know the body text of an an annotation, and so it should not be possible to expose this over the messaging interface.
:PROPERTIES:
:ID:       b66f1ba6a1d1635da2e6fca9c6e0df92
:END:
* TODO [#B] [2020-11-09] [[https://addons.mozilla.org/en-GB/firefox/collections/4757633/webdeveloper/][Web Developer's Toolbox ‚Äì Add-ons for Firefox (en-GB)]] :webext:
:PROPERTIES:
:ID:       d5840b13e77117458802f2b81255e8bb
:END:

* [#B] android debugging
:PROPERTIES:
:CREATED:  [2019-06-12]
:ID:       296f5bf7b530beac1b372c3a0f03fda0
:END:
~web-ext run --target=firefox-android --android-device=XXXX~
** [2019-08-10] remote debugging; use =Shift-F8= to open web ide https://developer.mozilla.org/en-US/docs/Tools/Remote_Debugging/Debugging_Firefox_for_Android_with_WebIDE#Enable_remote_debugging_in_Firefox_for_Android
:PROPERTIES:
:ID:       75b878e0dd8367cd4ce9596e8d63ef96
:END:
